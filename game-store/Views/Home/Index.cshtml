@using game_store_domain.Services.Infrastrucure;
@model GamesViewModel

@inject SignInManager<GameStoreUser> SignInManager
@inject UserManager<GameStoreUser> UserManager

@{
    var currentUser = await UserManager.GetUserAsync(User);
}

<div class="row">
    <div class="col-lg-5 col-md-6">
        <div class="widget-item">
            <a class="site-btn btn-sm" asp-controller="Game" asp-action="NewGamePage">Add game</a>
        </div>
    </div>
    <div class="col-lg-5 col-md-6">
        <div class="widget-item">
            <form class="search-widget" id="filterByTitleForm" asp-action="FindByGameTitle" asp-controller="Home">
                <input type="text" placeholder="Search" name="titleToFind" value="@Model.TitleKey">
                <button type="submit"><i class="fa fa-search"></i></button>
            </form>
        </div>
    </div>
    <div class="col-md-6">
        <button type="button" class="btn btn-outline-secondary btn-sm" data-bs-toggle="modal" data-bs-target="#editGenres">
            Filter by genres
        </button>
        <div class="modal fade" id="editGenres" tabindex="-1" aria-labelledby="gameGenresEditLbl" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <form id="genresFilterForm">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="gameGenresEditLbl">Edit game genres</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div class="mb-3">
                                <div class="row g-3 align-items-end">
                                    <partial name="_GenresView" />
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button id="applyGenresFilterBtn" type="submit" class="btn btn-outline-dark" data-bs-dismiss="modal">Apply</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    @foreach (var game in Model.Games)
    {
        string imgDataUrl;
        if (game.Image.Length != 0)
        {
            var gameImage = Convert.ToBase64String(game.Image);
            imgDataUrl = string.Format("data:image/jpg;base64,{0}", gameImage);
        }
        else
        {
            imgDataUrl = "/img/default-game-image.jpeg";
        }

        <div class="col-lg-4 col-md-6">
            <div class="recent-game-item">
                <div class="rgi-thumb set-bg" data-setbg="@imgDataUrl">
                    @{
                        string genresAsString = "";
                        @foreach (var genre in game.Genres)
                        {
                            if (string.IsNullOrEmpty(genresAsString))
                            {
                                genresAsString += (genre).GetAttribute<DisplayAttribute>().Name;
                            }
                            else
                            {
                                genresAsString += " / " + (genre).GetAttribute<DisplayAttribute>().Name;
                            }
                        }
                    }
                    @if (!string.IsNullOrEmpty(genresAsString))
                    {
                        <div class="cata racing">@genresAsString</div>
                    }
                </div>
                <div id="rgi@(game.Id)" class="rgi-content">
                    <a asp-controller="Game" asp-action="ViewGame" asp-route-gameId="@game.Id"><h5>@game.Title</h5></a>
                    <p class="comment">@(game.Comments?.Count) Comments</p>
                    <div class="rgi-extra">
                        <p>$@game.Price</p>
                    </div>
                    @if (SignInManager.IsSignedIn(User))
                    {
                        @if (currentUser.Cart.Items.Any(i => i.GameId == game.Id))
                        {
                            <a class="site-btn btn-sm" asp-controller="Cart" asp-action="Index">View in cart</a>
                        }
                        else
                        {
                            <form id="gameDataForm@(game.Id)" onsubmit="addGameIntoCart('@(game.Id)')">
                                <input name="gameId" type="hidden" value="@(game.Id)">
                                <input name="userId" type="hidden" value="@(currentUser?.Id)">
                                <button id="buyBtn@(game.Id)" type="submit" class="site-btn btn-sm">Buy</button>
                            </form>
                        }
                    }
                    else
                    {
                        <a type="submit" class="site-btn btn-sm" asp-area="Identity" asp-page="/Account/Login">Buy</a>
                    }
                </div>
            </div>
        </div>
    }
    <partial name="_AddedIntoCartToastForm" />
</div>
