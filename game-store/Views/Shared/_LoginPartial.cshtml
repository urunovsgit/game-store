@using Microsoft.AspNetCore.Identity

@inject SignInManager<GameStoreUser> SignInManager
@inject UserManager<GameStoreUser> UserManager

<div class="container">
    <!-- logo -->
    <a class="site-logo" asp-controller="Home" asp-action="Index">
        <img src="/img/logo.png" alt="">
    </a>
    @if (SignInManager.IsSignedIn(User))
    {
        <div class="user-panel">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="site-btn btn-sm">Logout</button>
            </form>
        </div>
    }
    else
    {
        <div class="user-panel">
            <a class="site-btn btn-sm" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </div>
    }
    <!-- responsive -->
    <div class="nav-switch">
        <i class="fa fa-bars"></i>
    </div>
    <!-- site menu -->
    <nav class="main-menu">
        <ul>
            <li><a asp-controller="Home" asp-action="Index">Games</a></li>
            <li><a href="categories.html">Blog</a></li>
            <li><a href="community.html">Forums</a></li>
            <li><a href="contact.html">Contact</a></li>
            @if (SignInManager.IsSignedIn(User))
            {
                <li class="nav-item">
                    <a id="manage" class="nav-link text-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                    @{
                        var user = await UserManager.GetUserAsync(User);
                    }
                    Hello @(user?.FirstName)!
                    </a>
                </li>
            }
            else
            {
                <li class="nav-item">
                    <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
                </li>
            }
        </ul>
    </nav>
</div>
